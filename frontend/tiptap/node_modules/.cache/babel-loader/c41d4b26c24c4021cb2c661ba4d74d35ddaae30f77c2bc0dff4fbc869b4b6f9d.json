{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mereb\\\\Documents\\\\git_repos\\\\TipTap\\\\TipTap\\\\frontend\\\\tiptap\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useRef, useState } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { confirmPasswordReset, createUserWithEmailAndPassword, onAuthStateChanged, sendPasswordResetEmail, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport function UserContextProvider(props) {\n  _s();\n  const [userRole, setUserRole] = useState(0);\n  const [userObject, setUserObject] = useState({});\n  const [accessToken, setAccessToken] = useState(null);\n  const userObjectRole = useRef(0);\n  const [percentage, setPercentage] = useState(null);\n  const [data, setData] = useState({});\n  async function refresh() {\n    const response = await myAxios.get(\"http://localhost:8081/refresh\", {\n      withCredentials: true\n    });\n    setAccessToken(response.data.accessToken);\n    console.log(\"newAccesToken\", response.data);\n    return response.data.accessToken;\n  }\n  function selectRole(userRole) {\n    setUserRole(userRole);\n  }\n  function signUp(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n  function signIn(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n  function forgotPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n  function resetPassword(oobCode, newPassword) {\n    return confirmPasswordReset(auth, oobCode, newPassword);\n  }\n  const [currentUser, setCurrentUser] = useState();\n  const [loadingData, setLoadingData] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setCurrentUser(currentUser);\n      setLoadingData(false);\n    });\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    //Check if there is a JWT Token, if not automatically logout user from Firebase\n    if (accessToken) {\n      console.log(\"token\", jwtDecode(accessToken));\n      setUserObject(jwtDecode(accessToken));\n    }\n  }, [accessToken]);\n  const verifyRefreshToken = async () => {\n    try {\n      await refresh();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    !accessToken && verifyRefreshToken();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userRole,\n      selectRole,\n      signUp,\n      signIn,\n      currentUser,\n      forgotPassword,\n      resetPassword,\n      userObject,\n      setUserObject,\n      percentage,\n      setPercentage,\n      data,\n      setData,\n      userObjectRole,\n      accessToken,\n      setAccessToken,\n      refresh\n    },\n    children: !loadingData && props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(UserContextProvider, \"yQgd+ShFCrIjPG+JwG9AwAUmTOA=\");\n_c = UserContextProvider;\nexport function useUserContext() {\n  _s2();\n  const {\n    userRole,\n    selectRole,\n    signUp,\n    signIn,\n    currentUser,\n    forgotPassword,\n    resetPassword,\n    userObject,\n    setUserObject,\n    percentage,\n    setPercentage,\n    data,\n    setData,\n    userObjectRole,\n    accessToken,\n    setAccessToken,\n    refresh\n  } = useContext(UserContext);\n  return {\n    userRole,\n    selectRole,\n    signUp,\n    signIn,\n    currentUser,\n    forgotPassword,\n    resetPassword,\n    userObject,\n    setUserObject,\n    percentage,\n    setPercentage,\n    data,\n    setData,\n    userObjectRole,\n    accessToken,\n    setAccessToken,\n    refresh\n  };\n}\n_s2(useUserContext, \"uZBFqgXQIrBLc6pGUBVtHaVAEe4=\");\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","useState","jwtDecode","confirmPasswordReset","createUserWithEmailAndPassword","onAuthStateChanged","sendPasswordResetEmail","signInWithEmailAndPassword","auth","jsxDEV","_jsxDEV","UserContext","UserContextProvider","props","_s","userRole","setUserRole","userObject","setUserObject","accessToken","setAccessToken","userObjectRole","percentage","setPercentage","data","setData","refresh","response","myAxios","get","withCredentials","console","log","selectRole","signUp","email","password","signIn","forgotPassword","resetPassword","oobCode","newPassword","currentUser","setCurrentUser","loadingData","setLoadingData","unsubscribe","verifyRefreshToken","err","error","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","$RefreshReg$"],"sources":["C:/Users/mereb/Documents/git_repos/TipTap/TipTap/frontend/tiptap/src/contexts/AuthContext.js"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { jwtDecode } from \"jwt-decode\";\n\nimport {\n  confirmPasswordReset,\n  createUserWithEmailAndPassword,\n  onAuthStateChanged,\n  sendPasswordResetEmail,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { auth } from \"../firebase.js\";\n\nexport const UserContext = createContext();\n\nexport function UserContextProvider(props) {\n  const [userRole, setUserRole] = useState(0);\n  const [userObject, setUserObject] = useState({});\n  const [accessToken, setAccessToken] = useState(null);\n  const userObjectRole = useRef(0);\n  const [percentage, setPercentage] = useState(null);\n  const [data, setData] = useState({});\n\n  async function refresh() {\n    const response = await myAxios.get(\"http://localhost:8081/refresh\", {\n      withCredentials: true,\n    });\n    setAccessToken(response.data.accessToken);\n    console.log(\"newAccesToken\", response.data);\n    return response.data.accessToken;\n  }\n\n  function selectRole(userRole) {\n    setUserRole(userRole);\n  }\n\n  function signUp(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function signIn(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n  function forgotPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n  function resetPassword(oobCode, newPassword) {\n    return confirmPasswordReset(auth, oobCode, newPassword);\n  }\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loadingData, setLoadingData] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setCurrentUser(currentUser);\n      setLoadingData(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  useEffect(() => {\n    //Check if there is a JWT Token, if not automatically logout user from Firebase\n    if (accessToken) {\n      console.log(\"token\", jwtDecode(accessToken));\n      setUserObject(jwtDecode(accessToken));\n    }\n  }, [accessToken]);\n\n  const verifyRefreshToken = async () => {\n    try {\n      await refresh();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    !accessToken && verifyRefreshToken();\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{\n        userRole,\n        selectRole,\n        signUp,\n        signIn,\n        currentUser,\n        forgotPassword,\n        resetPassword,\n        userObject,\n        setUserObject,\n        percentage,\n        setPercentage,\n        data,\n        setData,\n        userObjectRole,\n        accessToken,\n        setAccessToken,\n        refresh,\n      }}\n    >\n      {!loadingData && props.children}\n    </UserContext.Provider>\n  );\n}\n\nexport function useUserContext() {\n  const {\n    userRole,\n    selectRole,\n    signUp,\n    signIn,\n    currentUser,\n    forgotPassword,\n    resetPassword,\n    userObject,\n    setUserObject,\n    percentage,\n    setPercentage,\n    data,\n    setData,\n    userObjectRole,\n    accessToken,\n    setAccessToken,\n    refresh,\n  } = useContext(UserContext);\n\n  return {\n    userRole,\n    selectRole,\n    signUp,\n    signIn,\n    currentUser,\n    forgotPassword,\n    resetPassword,\n    userObject,\n    setUserObject,\n    percentage,\n    setPercentage,\n    data,\n    setData,\n    userObjectRole,\n    accessToken,\n    setAccessToken,\n    refresh,\n  };\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IACVC,aAAa,EACbC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,QAAQ,QACH,OAAO;AAEd,SAASC,SAAS,QAAQ,YAAY;AAEtC,SACEC,oBAAoB,EACpBC,8BAA8B,EAC9BC,kBAAkB,EAClBC,sBAAsB,EACtBC,0BAA0B,QACrB,eAAe;AACtB,SAASC,IAAI,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,WAAW,gBAAGd,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASe,mBAAmBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMoB,cAAc,GAAGrB,MAAM,CAAC,CAAC,CAAC;EAChC,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,eAAeyB,OAAOA,CAAA,EAAG;IACvB,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;MAClEC,eAAe,EAAE;IACnB,CAAC,CAAC;IACFV,cAAc,CAACO,QAAQ,CAACH,IAAI,CAACL,WAAW,CAAC;IACzCY,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAACH,IAAI,CAAC;IAC3C,OAAOG,QAAQ,CAACH,IAAI,CAACL,WAAW;EAClC;EAEA,SAASc,UAAUA,CAAClB,QAAQ,EAAE;IAC5BC,WAAW,CAACD,QAAQ,CAAC;EACvB;EAEA,SAASmB,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAC/B,OAAOhC,8BAA8B,CAACI,IAAI,EAAE2B,KAAK,EAAEC,QAAQ,CAAC;EAC9D;EAEA,SAASC,MAAMA,CAACF,KAAK,EAAEC,QAAQ,EAAE;IAC/B,OAAO7B,0BAA0B,CAACC,IAAI,EAAE2B,KAAK,EAAEC,QAAQ,CAAC;EAC1D;EACA,SAASE,cAAcA,CAACH,KAAK,EAAE;IAC7B,OAAO7B,sBAAsB,CAACE,IAAI,EAAE2B,KAAK,CAAC;EAC5C;EACA,SAASI,aAAaA,CAACC,OAAO,EAAEC,WAAW,EAAE;IAC3C,OAAOtC,oBAAoB,CAACK,IAAI,EAAEgC,OAAO,EAAEC,WAAW,CAAC;EACzD;EAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,CAAC;EAChD,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACpDF,SAAS,CAAC,MAAM;IACd,MAAM+C,WAAW,GAAGzC,kBAAkB,CAACG,IAAI,EAAGkC,WAAW,IAAK;MAC5DC,cAAc,CAACD,WAAW,CAAC;MAC3BG,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;IAEF,OAAOC,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN/C,SAAS,CAAC,MAAM;IACd;IACA,IAAIoB,WAAW,EAAE;MACfY,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE9B,SAAS,CAACiB,WAAW,CAAC,CAAC;MAC5CD,aAAa,CAAChB,SAAS,CAACiB,WAAW,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAM4B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF,MAAMrB,OAAO,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACZjB,OAAO,CAACkB,KAAK,CAACD,GAAG,CAAC;IACpB;EACF,CAAC;EAEDjD,SAAS,CAAC,MAAM;IACd,CAACoB,WAAW,IAAI4B,kBAAkB,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErC,OAAA,CAACC,WAAW,CAACuC,QAAQ;IACnBC,KAAK,EAAE;MACLpC,QAAQ;MACRkB,UAAU;MACVC,MAAM;MACNG,MAAM;MACNK,WAAW;MACXJ,cAAc;MACdC,aAAa;MACbtB,UAAU;MACVC,aAAa;MACbI,UAAU;MACVC,aAAa;MACbC,IAAI;MACJC,OAAO;MACPJ,cAAc;MACdF,WAAW;MACXC,cAAc;MACdM;IACF,CAAE;IAAA0B,QAAA,EAED,CAACR,WAAW,IAAI/B,KAAK,CAACuC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAE3B;AAAC1C,EAAA,CA3FeF,mBAAmB;AAAA6C,EAAA,GAAnB7C,mBAAmB;AA6FnC,OAAO,SAAS8C,cAAcA,CAAA,EAAG;EAAAC,GAAA;EAC/B,MAAM;IACJ5C,QAAQ;IACRkB,UAAU;IACVC,MAAM;IACNG,MAAM;IACNK,WAAW;IACXJ,cAAc;IACdC,aAAa;IACbtB,UAAU;IACVC,aAAa;IACbI,UAAU;IACVC,aAAa;IACbC,IAAI;IACJC,OAAO;IACPJ,cAAc;IACdF,WAAW;IACXC,cAAc;IACdM;EACF,CAAC,GAAG5B,UAAU,CAACa,WAAW,CAAC;EAE3B,OAAO;IACLI,QAAQ;IACRkB,UAAU;IACVC,MAAM;IACNG,MAAM;IACNK,WAAW;IACXJ,cAAc;IACdC,aAAa;IACbtB,UAAU;IACVC,aAAa;IACbI,UAAU;IACVC,aAAa;IACbC,IAAI;IACJC,OAAO;IACPJ,cAAc;IACdF,WAAW;IACXC,cAAc;IACdM;EACF,CAAC;AACH;AAACiC,GAAA,CAxCeD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}