{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mereb\\\\Documents\\\\git_repos\\\\TipTap\\\\TipTap\\\\frontend\\\\tiptap\\\\src\\\\components\\\\PrivateManager\\\\PrivateHomeManager\\\\WorkerQrCode.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport \"../../../style.css\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getUser } from \"../../../fetches/FetchUsers\";\nimport { useStaffContext } from \"../../../contexts/fetches-contexts/StaffContext\";\nimport { useUserContext } from \"../../../contexts/AuthContext\";\nimport { isEmailValid } from \"../../../fetches/FetchStaff\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nexport default function WorkerQrCode() {\n  _s2();\n  const navigate = useNavigate();\n  const query = useQuery();\n  const [validation, setValidation] = useState(\"\");\n  const {\n    staffObject\n  } = useStaffContext();\n  const {\n    userObjectRole\n  } = useUserContext();\n  const location = useLocation();\n  const userId = location.pathname.split(\"/privateManager/private-home-manager/worker-qrcode/\")[1];\n  async function getWorker() {\n    //If the user is connected as a manager\n    //if (userObjectRole.role != 2) {\n    try {\n      const getUserReponse = await getUser(userId);\n      console.log(\"aaa\", userId);\n      console.log(\"bbb\", getUserReponse);\n      if (getUserReponse.status == \"Success\") {\n        const getValidStaffResponse = await isEmailValid(getUserReponse.response[0].email);\n        //Check if this email is not already used in staff\n        if (getValidStaffResponse.status == \"Success\") {\n          console.log(\"c'est bon\");\n        } else {\n          setValidation(getValidStaffResponse.response);\n        }\n      } else {\n        setValidation(getUserReponse.response);\n      }\n    } catch (err) {\n      setValidation(\"Une erreur est survenue\");\n    }\n    //} else {\n    //setValidation(\"Vous n'êtes pas connecté en tant que manager\");\n    //}\n  }\n\n  useEffect(() => {\n    getWorker();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger mt-1\",\n      children: validation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s2(WorkerQrCode, \"rZNiOORHIw55jO8WHKLsSrnuIhk=\", false, function () {\n  return [useNavigate, useQuery, useStaffContext, useUserContext, useLocation];\n});\n_c = WorkerQrCode;\nvar _c;\n$RefreshReg$(_c, \"WorkerQrCode\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","getUser","useStaffContext","useUserContext","isEmailValid","jsxDEV","_jsxDEV","useQuery","_s","URLSearchParams","search","WorkerQrCode","_s2","navigate","query","validation","setValidation","staffObject","userObjectRole","location","userId","pathname","split","getWorker","getUserReponse","console","log","status","getValidStaffResponse","response","email","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mereb/Documents/git_repos/TipTap/TipTap/frontend/tiptap/src/components/PrivateManager/PrivateHomeManager/WorkerQrCode.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../../../style.css\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { getUser } from \"../../../fetches/FetchUsers\";\r\nimport { useStaffContext } from \"../../../contexts/fetches-contexts/StaffContext\";\r\nimport { useUserContext } from \"../../../contexts/AuthContext\";\r\nimport { isEmailValid } from \"../../../fetches/FetchStaff\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function WorkerQrCode() {\r\n  const navigate = useNavigate();\r\n  const query = useQuery();\r\n  const [validation, setValidation] = useState(\"\");\r\n  const { staffObject } = useStaffContext();\r\n  const { userObjectRole } = useUserContext();\r\n  const location = useLocation();\r\n  const userId = location.pathname.split(\r\n    \"/privateManager/private-home-manager/worker-qrcode/\"\r\n  )[1];\r\n\r\n  async function getWorker() {\r\n    //If the user is connected as a manager\r\n    //if (userObjectRole.role != 2) {\r\n    try {\r\n      const getUserReponse = await getUser(userId);\r\n      console.log(\"aaa\", userId);\r\n      console.log(\"bbb\", getUserReponse);\r\n\r\n      if (getUserReponse.status == \"Success\") {\r\n        const getValidStaffResponse = await isEmailValid(\r\n          getUserReponse.response[0].email\r\n        );\r\n        //Check if this email is not already used in staff\r\n        if (getValidStaffResponse.status == \"Success\") {\r\n          console.log(\"c'est bon\");\r\n        } else {\r\n          setValidation(getValidStaffResponse.response);\r\n        }\r\n      } else {\r\n        setValidation(getUserReponse.response);\r\n      }\r\n    } catch (err) {\r\n      setValidation(\"Une erreur est survenue\");\r\n    }\r\n    //} else {\r\n    //setValidation(\"Vous n'êtes pas connecté en tant que manager\");\r\n    //}\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWorker();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"text-danger mt-1\">{validation}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAE3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,eAAe,QAAQ,iDAAiD;AACjF,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,YAAY,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,OAAO,IAAIC,eAAe,CAACV,WAAW,CAAC,CAAC,CAACW,MAAM,CAAC;AAClD;AAACF,EAAA,CAFQD,QAAQ;EAAA,QACYR,WAAW;AAAA;AAGxC,eAAe,SAASY,YAAYA,CAAA,EAAG;EAAAC,GAAA;EACrC,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEmB;EAAY,CAAC,GAAGf,eAAe,CAAC,CAAC;EACzC,MAAM;IAAEgB;EAAe,CAAC,GAAGf,cAAc,CAAC,CAAC;EAC3C,MAAMgB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,MAAM,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CACpC,qDACF,CAAC,CAAC,CAAC,CAAC;EAEJ,eAAeC,SAASA,CAAA,EAAG;IACzB;IACA;IACA,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMvB,OAAO,CAACmB,MAAM,CAAC;MAC5CK,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEN,MAAM,CAAC;MAC1BK,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,cAAc,CAAC;MAElC,IAAIA,cAAc,CAACG,MAAM,IAAI,SAAS,EAAE;QACtC,MAAMC,qBAAqB,GAAG,MAAMxB,YAAY,CAC9CoB,cAAc,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACC,KAC7B,CAAC;QACD;QACA,IAAIF,qBAAqB,CAACD,MAAM,IAAI,SAAS,EAAE;UAC7CF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QAC1B,CAAC,MAAM;UACLV,aAAa,CAACY,qBAAqB,CAACC,QAAQ,CAAC;QAC/C;MACF,CAAC,MAAM;QACLb,aAAa,CAACQ,cAAc,CAACK,QAAQ,CAAC;MACxC;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,aAAa,CAAC,yBAAyB,CAAC;IAC1C;IACA;IACA;IACA;EACF;;EAEAnB,SAAS,CAAC,MAAM;IACd0B,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAA0B,QAAA,eACE1B,OAAA;MAAG2B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAEjB;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACzB,GAAA,CAjDuBD,YAAY;EAAA,QACjBX,WAAW,EACdO,QAAQ,EAEEL,eAAe,EACZC,cAAc,EACxBJ,WAAW;AAAA;AAAAuC,EAAA,GANN3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}