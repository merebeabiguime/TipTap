{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mereb\\\\Documents\\\\git_repos\\\\TipTap\\\\TipTap\\\\frontend\\\\tiptap\\\\src\\\\components\\\\PrivateManager\\\\PrivateHomeManager\\\\WorkerQrCode.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../../../style.css\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { getUser } from \"../../../fetches/FetchUsers\";\nimport { useStaffContext } from \"../../../contexts/fetches-contexts/StaffContext\";\nimport { useUserContext } from \"../../../contexts/AuthContext\";\nimport { isEmailValid } from \"../../../fetches/FetchStaff\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WorkerQrCode() {\n  _s();\n  const navigate = useNavigate();\n  const query = useQuery();\n  const [validation, setValidation] = useState(\"\");\n  const {\n    staffObject\n  } = useStaffContext();\n  const {\n    userObjectRole\n  } = useUserContext();\n  let {\n    userId\n  } = useParams();\n  async function getWorker() {\n    //If the user is connected as a manager\n    //if (userObjectRole.role != 2) {\n    try {\n      const getUserReponse = await getUser(userId);\n      if (getUserReponse.status == \"Success\") {\n        const getValidStaffResponse = await isEmailValid(getUserReponse.response[0].email);\n        //Check if this email is not already used in staff\n        if (getValidStaffResponse.status == \"Success\") {\n          staffObject.current = {\n            firstName: getUserReponse.response[0].firstName,\n            lastName: getUserReponse.response[0].lastName,\n            ID_USER: getUserReponse.response[0].ID,\n            pictureUrl: getUserReponse.response[0].pictureUrl,\n            stars: 5,\n            role: 0\n          };\n          navigate(\"/privateManager/private-home-manager/add-staff/select-staff-role\");\n        } else {\n          setValidation(getValidStaffResponse.response);\n        }\n      } else {\n        setValidation(getUserReponse.response);\n      }\n    } catch (err) {\n      setValidation(\"Une erreur est survenue\");\n    }\n    //} else {\n    //setValidation(\"Vous n'êtes pas connecté en tant que manager\");\n    //}\n  }\n\n  useEffect(() => {\n    getWorker();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger mt-1\",\n      children: validation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkerQrCode, \"yQDETwisw0IDGd0pWbwNUYg5kVs=\", true, function () {\n  return [useNavigate, useStaffContext, useUserContext, useParams];\n});\n_c = WorkerQrCode;\nvar _c;\n$RefreshReg$(_c, \"WorkerQrCode\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","useParams","getUser","useStaffContext","useUserContext","isEmailValid","jsxDEV","_jsxDEV","WorkerQrCode","_s","navigate","query","useQuery","validation","setValidation","staffObject","userObjectRole","userId","getWorker","getUserReponse","status","getValidStaffResponse","response","email","current","firstName","lastName","ID_USER","ID","pictureUrl","stars","role","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mereb/Documents/git_repos/TipTap/TipTap/frontend/tiptap/src/components/PrivateManager/PrivateHomeManager/WorkerQrCode.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../../../style.css\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { getUser } from \"../../../fetches/FetchUsers\";\r\nimport { useStaffContext } from \"../../../contexts/fetches-contexts/StaffContext\";\r\nimport { useUserContext } from \"../../../contexts/AuthContext\";\r\nimport { isEmailValid } from \"../../../fetches/FetchStaff\";\r\n\r\nexport default function WorkerQrCode() {\r\n  const navigate = useNavigate();\r\n  const query = useQuery();\r\n  const [validation, setValidation] = useState(\"\");\r\n  const { staffObject } = useStaffContext();\r\n  const { userObjectRole } = useUserContext();\r\n  let { userId } = useParams();\r\n\r\n  async function getWorker() {\r\n    //If the user is connected as a manager\r\n    //if (userObjectRole.role != 2) {\r\n    try {\r\n      const getUserReponse = await getUser(userId);\r\n\r\n      if (getUserReponse.status == \"Success\") {\r\n        const getValidStaffResponse = await isEmailValid(\r\n          getUserReponse.response[0].email\r\n        );\r\n        //Check if this email is not already used in staff\r\n        if (getValidStaffResponse.status == \"Success\") {\r\n          staffObject.current = {\r\n            firstName: getUserReponse.response[0].firstName,\r\n            lastName: getUserReponse.response[0].lastName,\r\n            ID_USER: getUserReponse.response[0].ID,\r\n            pictureUrl: getUserReponse.response[0].pictureUrl,\r\n            stars: 5,\r\n            role: 0,\r\n          };\r\n          navigate(\r\n            \"/privateManager/private-home-manager/add-staff/select-staff-role\"\r\n          );\r\n        } else {\r\n          setValidation(getValidStaffResponse.response);\r\n        }\r\n      } else {\r\n        setValidation(getUserReponse.response);\r\n      }\r\n    } catch (err) {\r\n      setValidation(\"Une erreur est survenue\");\r\n    }\r\n    //} else {\r\n    //setValidation(\"Vous n'êtes pas connecté en tant que manager\");\r\n    //}\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWorker();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"text-danger mt-1\">{validation}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAE3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACtE,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,eAAe,QAAQ,iDAAiD;AACjF,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,YAAY,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,KAAK,GAAGC,QAAQ,CAAC,CAAC;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEiB;EAAY,CAAC,GAAGZ,eAAe,CAAC,CAAC;EACzC,MAAM;IAAEa;EAAe,CAAC,GAAGZ,cAAc,CAAC,CAAC;EAC3C,IAAI;IAAEa;EAAO,CAAC,GAAGhB,SAAS,CAAC,CAAC;EAE5B,eAAeiB,SAASA,CAAA,EAAG;IACzB;IACA;IACA,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMjB,OAAO,CAACe,MAAM,CAAC;MAE5C,IAAIE,cAAc,CAACC,MAAM,IAAI,SAAS,EAAE;QACtC,MAAMC,qBAAqB,GAAG,MAAMhB,YAAY,CAC9Cc,cAAc,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACC,KAC7B,CAAC;QACD;QACA,IAAIF,qBAAqB,CAACD,MAAM,IAAI,SAAS,EAAE;UAC7CL,WAAW,CAACS,OAAO,GAAG;YACpBC,SAAS,EAAEN,cAAc,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACG,SAAS;YAC/CC,QAAQ,EAAEP,cAAc,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACI,QAAQ;YAC7CC,OAAO,EAAER,cAAc,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACM,EAAE;YACtCC,UAAU,EAAEV,cAAc,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACO,UAAU;YACjDC,KAAK,EAAE,CAAC;YACRC,IAAI,EAAE;UACR,CAAC;UACDrB,QAAQ,CACN,kEACF,CAAC;QACH,CAAC,MAAM;UACLI,aAAa,CAACO,qBAAqB,CAACC,QAAQ,CAAC;QAC/C;MACF,CAAC,MAAM;QACLR,aAAa,CAACK,cAAc,CAACG,QAAQ,CAAC;MACxC;IACF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZlB,aAAa,CAAC,yBAAyB,CAAC;IAC1C;IACA;IACA;IACA;EACF;;EAEAjB,SAAS,CAAC,MAAM;IACdqB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAA0B,QAAA,eACE1B,OAAA;MAAG2B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAEpB;IAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAAC7B,EAAA,CAtDuBD,YAAY;EAAA,QACjBR,WAAW,EAGJG,eAAe,EACZC,cAAc,EACxBH,SAAS;AAAA;AAAAsC,EAAA,GANJ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}