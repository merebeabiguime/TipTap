{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mereb\\\\Documents\\\\git_repos\\\\TipTap\\\\TipTap\\\\frontend\\\\tiptap\\\\src\\\\contexts\\\\fetches-contexts\\\\StaffContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, createContext, useRef } from \"react\";\nimport { getStaffList } from \"../../fetches/FetchStaff\";\nimport { getUser } from \"../../fetches/FetchUsers\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StaffContext = /*#__PURE__*/createContext();\nexport function StaffContextProvider(props) {\n  _s();\n  const staffObject = useRef({});\n  const [staffListFilter, setStaffListFilter] = useState([{}]);\n  const [staffList, setStaffList] = useState([{}]);\n  const [loadingData, setLoadingData] = useState(true);\n  const staffQuery = useQuery({\n    queryKey: [\"staff\"],\n    queryFn: async () => await getStaffList()\n  });\n  if (!staffQuery.isLoading && loadingData == true) {\n    console.log(\"aaaa\", staffQuery.data.response);\n    setStaffList(staffQuery.data.response);\n    setLoadingData(false);\n  }\n  return /*#__PURE__*/_jsxDEV(StaffContext.Provider, {\n    value: {\n      staffObject,\n      staffListFilter,\n      setStaffListFilter,\n      staffList,\n      setStaffList\n    },\n    children: !loadingData && props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(StaffContextProvider, \"mTEoeUiF3k8kivkHJsU8lA/7FKM=\", false, function () {\n  return [useQuery];\n});\n_c = StaffContextProvider;\nexport function useStaffContext() {\n  _s2();\n  const {\n    staffObject,\n    staffListFilter,\n    setStaffListFilter,\n    staffList,\n    setStaffList,\n    staffQuery\n  } = useContext(StaffContext);\n  return {\n    staffObject,\n    staffListFilter,\n    setStaffListFilter,\n    staffList,\n    setStaffList,\n    staffQuery\n  };\n}\n_s2(useStaffContext, \"9VRW+lQtyBp3yQ42WNwYgpLEoag=\");\nvar _c;\n$RefreshReg$(_c, \"StaffContextProvider\");","map":{"version":3,"names":["React","useContext","useState","createContext","useRef","getStaffList","getUser","useQuery","jsxDEV","_jsxDEV","StaffContext","StaffContextProvider","props","_s","staffObject","staffListFilter","setStaffListFilter","staffList","setStaffList","loadingData","setLoadingData","staffQuery","queryKey","queryFn","isLoading","console","log","data","response","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStaffContext","_s2","$RefreshReg$"],"sources":["C:/Users/mereb/Documents/git_repos/TipTap/TipTap/frontend/tiptap/src/contexts/fetches-contexts/StaffContext.js"],"sourcesContent":["import React, { useContext, useState, createContext, useRef } from \"react\";\r\nimport { getStaffList } from \"../../fetches/FetchStaff\";\r\nimport { getUser } from \"../../fetches/FetchUsers\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nexport const StaffContext = createContext();\r\n\r\nexport function StaffContextProvider(props) {\r\n  const staffObject = useRef({});\r\n  const [staffListFilter, setStaffListFilter] = useState([{}]);\r\n  const [staffList, setStaffList] = useState([{}]);\r\n  const [loadingData, setLoadingData] = useState(true);\r\n\r\n  const staffQuery = useQuery({\r\n    queryKey: [\"staff\"],\r\n    queryFn: async () => await getStaffList(),\r\n  });\r\n\r\n  if (!staffQuery.isLoading && loadingData == true) {\r\n    console.log(\"aaaa\", staffQuery.data.response);\r\n    setStaffList(staffQuery.data.response);\r\n    setLoadingData(false);\r\n  }\r\n\r\n  return (\r\n    <StaffContext.Provider\r\n      value={{\r\n        staffObject,\r\n        staffListFilter,\r\n        setStaffListFilter,\r\n        staffList,\r\n        setStaffList,\r\n      }}\r\n    >\r\n      {!loadingData && props.children}\r\n    </StaffContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useStaffContext() {\r\n  const {\r\n    staffObject,\r\n    staffListFilter,\r\n    setStaffListFilter,\r\n    staffList,\r\n    setStaffList,\r\n    staffQuery,\r\n  } = useContext(StaffContext);\r\n\r\n  return {\r\n    staffObject,\r\n    staffListFilter,\r\n    setStaffListFilter,\r\n    staffList,\r\n    setStaffList,\r\n    staffQuery,\r\n  };\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,QAAQ,OAAO;AAC1E,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASQ,oBAAoBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC1C,MAAMC,WAAW,GAAGV,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMmB,UAAU,GAAGd,QAAQ,CAAC;IAC1Be,QAAQ,EAAE,CAAC,OAAO,CAAC;IACnBC,OAAO,EAAE,MAAAA,CAAA,KAAY,MAAMlB,YAAY,CAAC;EAC1C,CAAC,CAAC;EAEF,IAAI,CAACgB,UAAU,CAACG,SAAS,IAAIL,WAAW,IAAI,IAAI,EAAE;IAChDM,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEL,UAAU,CAACM,IAAI,CAACC,QAAQ,CAAC;IAC7CV,YAAY,CAACG,UAAU,CAACM,IAAI,CAACC,QAAQ,CAAC;IACtCR,cAAc,CAAC,KAAK,CAAC;EACvB;EAEA,oBACEX,OAAA,CAACC,YAAY,CAACmB,QAAQ;IACpBC,KAAK,EAAE;MACLhB,WAAW;MACXC,eAAe;MACfC,kBAAkB;MAClBC,SAAS;MACTC;IACF,CAAE;IAAAa,QAAA,EAED,CAACZ,WAAW,IAAIP,KAAK,CAACmB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAE5B;AAACtB,EAAA,CA9BeF,oBAAoB;EAAA,QAMfJ,QAAQ;AAAA;AAAA6B,EAAA,GANbzB,oBAAoB;AAgCpC,OAAO,SAAS0B,eAAeA,CAAA,EAAG;EAAAC,GAAA;EAChC,MAAM;IACJxB,WAAW;IACXC,eAAe;IACfC,kBAAkB;IAClBC,SAAS;IACTC,YAAY;IACZG;EACF,CAAC,GAAGpB,UAAU,CAACS,YAAY,CAAC;EAE5B,OAAO;IACLI,WAAW;IACXC,eAAe;IACfC,kBAAkB;IAClBC,SAAS;IACTC,YAAY;IACZG;EACF,CAAC;AACH;AAACiB,GAAA,CAlBeD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}