{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mereb\\\\Documents\\\\git_repos\\\\TipTap\\\\TipTap\\\\frontend\\\\tiptap\\\\src\\\\components\\\\PrivateManager\\\\PrivateHomeManager\\\\WorkerQrCode.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport \"../../../style.css\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getUser } from \"../../../fetches/FetchUsers\";\nimport { useStaffContext } from \"../../../contexts/fetches-contexts/StaffContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\nexport default function WorkerQrCode() {\n  _s2();\n  const navigate = useNavigate();\n  const query = useQuery();\n  const [validation, setValidation] = useState(\"\");\n  const {\n    staffObject\n  } = useStaffContext();\n  useEffect(() => {\n    try {\n      //If the user is connected as a manager\n      const getUserReponse = getUser(query.get(\"userId\"));\n      if (getUserReponse.status == \"Success\") {\n        staffObject.current = {\n          firstName: getUserReponse.response[0].firstName,\n          lastName: getUserReponse.response[0].lastName,\n          ID_USER: getUserReponse.response[0].ID,\n          pictureUrl: getUserReponse.response[0].pictureUrl,\n          stars: 5,\n          role: 0\n        };\n        navigate(\"/privateManager/private-home-manager/add-staff/select-staff-role\");\n      } else {\n        setValidation(getUserReponse.response);\n      }\n    } catch (err) {\n      setValidation(\"Une erreur est survenue\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger mt-1\",\n      children: validation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s2(WorkerQrCode, \"w57ChKo4opezZjtyyMLIaH9Z0s4=\", false, function () {\n  return [useNavigate, useQuery, useStaffContext];\n});\n_c = WorkerQrCode;\nvar _c;\n$RefreshReg$(_c, \"WorkerQrCode\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","getUser","useStaffContext","jsxDEV","_jsxDEV","useQuery","_s","URLSearchParams","search","WorkerQrCode","_s2","navigate","query","validation","setValidation","staffObject","getUserReponse","get","status","current","firstName","response","lastName","ID_USER","ID","pictureUrl","stars","role","err","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mereb/Documents/git_repos/TipTap/TipTap/frontend/tiptap/src/components/PrivateManager/PrivateHomeManager/WorkerQrCode.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../../../style.css\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { getUser } from \"../../../fetches/FetchUsers\";\r\nimport { useStaffContext } from \"../../../contexts/fetches-contexts/StaffContext\";\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function WorkerQrCode() {\r\n  const navigate = useNavigate();\r\n  const query = useQuery();\r\n  const [validation, setValidation] = useState(\"\");\r\n  const { staffObject } = useStaffContext();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      //If the user is connected as a manager\r\n      const getUserReponse = getUser(query.get(\"userId\"));\r\n      if (getUserReponse.status == \"Success\") {\r\n        staffObject.current = {\r\n          firstName: getUserReponse.response[0].firstName,\r\n          lastName: getUserReponse.response[0].lastName,\r\n          ID_USER: getUserReponse.response[0].ID,\r\n          pictureUrl: getUserReponse.response[0].pictureUrl,\r\n          stars: 5,\r\n          role: 0,\r\n        };\r\n        navigate(\r\n          \"/privateManager/private-home-manager/add-staff/select-staff-role\"\r\n        );\r\n      } else {\r\n        setValidation(getUserReponse.response);\r\n      }\r\n    } catch (err) {\r\n      setValidation(\"Une erreur est survenue\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"text-danger mt-1\">{validation}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAE3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,eAAe,QAAQ,iDAAiD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,OAAO,IAAIC,eAAe,CAACR,WAAW,CAAC,CAAC,CAACS,MAAM,CAAC;AAClD;AAACF,EAAA,CAFQD,QAAQ;EAAA,QACYN,WAAW;AAAA;AAGxC,eAAe,SAASU,YAAYA,CAAA,EAAG;EAAAC,GAAA;EACrC,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEiB;EAAY,CAAC,GAAGb,eAAe,CAAC,CAAC;EAEzCL,SAAS,CAAC,MAAM;IACd,IAAI;MACF;MACA,MAAMmB,cAAc,GAAGf,OAAO,CAACW,KAAK,CAACK,GAAG,CAAC,QAAQ,CAAC,CAAC;MACnD,IAAID,cAAc,CAACE,MAAM,IAAI,SAAS,EAAE;QACtCH,WAAW,CAACI,OAAO,GAAG;UACpBC,SAAS,EAAEJ,cAAc,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACD,SAAS;UAC/CE,QAAQ,EAAEN,cAAc,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACC,QAAQ;UAC7CC,OAAO,EAAEP,cAAc,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACG,EAAE;UACtCC,UAAU,EAAET,cAAc,CAACK,QAAQ,CAAC,CAAC,CAAC,CAACI,UAAU;UACjDC,KAAK,EAAE,CAAC;UACRC,IAAI,EAAE;QACR,CAAC;QACDhB,QAAQ,CACN,kEACF,CAAC;MACH,CAAC,MAAM;QACLG,aAAa,CAACE,cAAc,CAACK,QAAQ,CAAC;MACxC;IACF,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZd,aAAa,CAAC,yBAAyB,CAAC;IAC1C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAyB,QAAA,eACEzB,OAAA;MAAG0B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAEhB;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACxB,GAAA,CAnCuBD,YAAY;EAAA,QACjBT,WAAW,EACdK,QAAQ,EAEEH,eAAe;AAAA;AAAAiC,EAAA,GAJjB1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}