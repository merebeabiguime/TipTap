{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mereb\\\\Documents\\\\git_repos\\\\TipTap\\\\TipTap\\\\frontend\\\\tiptap\\\\src\\\\features\\\\PaypalCheckoutButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaypalCheckoutButton = props => {\n  _s();\n  const {\n    product\n  } = props;\n  const [paidFor, setPaidFor] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleApprove = orderID => {\n    //Call backend to fulfill the order\n    setPaidFor(true);\n    //Refresh user account\n  };\n\n  if (paidFor) {\n    naviguate(\"/privateClient/1/success-payment\");\n    setPaidFor(false);\n  }\n  if (error) {\n    //Display error message\n    alert(\"Erorr\");\n  }\n  return /*#__PURE__*/_jsxDEV(PayPalButtons, {\n    createOrder: (data, actions) => {\n      return actions.order.create({\n        purchase_units: [{\n          description: product.description,\n          amount: {\n            value: product.price\n          }\n        }]\n      });\n    },\n    onApprove: async (data, actions) => {\n      const order = await actions.order.capture();\n      handleApprove(data.orderID);\n    },\n    onError: err => {\n      setError(err);\n    },\n    onCancel: () => {\n      //Back to cart\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PaypalCheckoutButton, \"P+eS12a0kbHiTk1ehiouLZ/iC2Q=\", false, function () {\n  return [useNavigate];\n});\n_c = PaypalCheckoutButton;\nexport default PaypalCheckoutButton;\nvar _c;\n$RefreshReg$(_c, \"PaypalCheckoutButton\");","map":{"version":3,"names":["React","useState","PayPalButtons","useNavigate","jsxDEV","_jsxDEV","PaypalCheckoutButton","props","_s","product","paidFor","setPaidFor","error","setError","navigate","handleApprove","orderID","naviguate","alert","createOrder","data","actions","order","create","purchase_units","description","amount","value","price","onApprove","capture","onError","err","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mereb/Documents/git_repos/TipTap/TipTap/frontend/tiptap/src/features/PaypalCheckoutButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst PaypalCheckoutButton = (props) => {\r\n  const { product } = props;\r\n  const [paidFor, setPaidFor] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleApprove = (orderID) => {\r\n    //Call backend to fulfill the order\r\n    setPaidFor(true);\r\n    //Refresh user account\r\n  };\r\n\r\n  if (paidFor) {\r\n    naviguate(\"/privateClient/1/success-payment\");\r\n    setPaidFor(false);\r\n  }\r\n  if (error) {\r\n    //Display error message\r\n    alert(\"Erorr\");\r\n  }\r\n  return (\r\n    <PayPalButtons\r\n      createOrder={(data, actions) => {\r\n        return actions.order.create({\r\n          purchase_units: [\r\n            {\r\n              description: product.description,\r\n              amount: { value: product.price },\r\n            },\r\n          ],\r\n        });\r\n      }}\r\n      onApprove={async (data, actions) => {\r\n        const order = await actions.order.capture();\r\n        handleApprove(data.orderID);\r\n      }}\r\n      onError={(err) => {\r\n        setError(err);\r\n      }}\r\n      onCancel={() => {\r\n        //Back to cart\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default PaypalCheckoutButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAQ,CAAC,GAAGF,KAAK;EACzB,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,aAAa,GAAIC,OAAO,IAAK;IACjC;IACAL,UAAU,CAAC,IAAI,CAAC;IAChB;EACF,CAAC;;EAED,IAAID,OAAO,EAAE;IACXO,SAAS,CAAC,kCAAkC,CAAC;IAC7CN,UAAU,CAAC,KAAK,CAAC;EACnB;EACA,IAAIC,KAAK,EAAE;IACT;IACAM,KAAK,CAAC,OAAO,CAAC;EAChB;EACA,oBACEb,OAAA,CAACH,aAAa;IACZiB,WAAW,EAAEA,CAACC,IAAI,EAAEC,OAAO,KAAK;MAC9B,OAAOA,OAAO,CAACC,KAAK,CAACC,MAAM,CAAC;QAC1BC,cAAc,EAAE,CACd;UACEC,WAAW,EAAEhB,OAAO,CAACgB,WAAW;UAChCC,MAAM,EAAE;YAAEC,KAAK,EAAElB,OAAO,CAACmB;UAAM;QACjC,CAAC;MAEL,CAAC,CAAC;IACJ,CAAE;IACFC,SAAS,EAAE,MAAAA,CAAOT,IAAI,EAAEC,OAAO,KAAK;MAClC,MAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAK,CAACQ,OAAO,CAAC,CAAC;MAC3Cf,aAAa,CAACK,IAAI,CAACJ,OAAO,CAAC;IAC7B,CAAE;IACFe,OAAO,EAAGC,GAAG,IAAK;MAChBnB,QAAQ,CAACmB,GAAG,CAAC;IACf,CAAE;IACFC,QAAQ,EAAEA,CAAA,KAAM;MACd;IAAA;EACA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAC7B,EAAA,CA5CIF,oBAAoB;EAAA,QAIPH,WAAW;AAAA;AAAAmC,EAAA,GAJxBhC,oBAAoB;AA6C1B,eAAeA,oBAAoB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}