{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mereb\\\\Documents\\\\git_repos\\\\TipTap\\\\TipTap\\\\frontend\\\\tiptap\\\\src\\\\components\\\\PrivateClient\\\\PrivateClient.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { Navigate, Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useUserContext } from \"../../contexts/AuthContext\";\nimport { Spinner } from \"react-bootstrap\";\nimport { useFetchRestaurant } from \"../../fetches/FetchRestaurant\";\nimport { useQuery } from \"react-query\";\nimport { useStaffContext } from \"../../contexts/fetches-contexts/StaffContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateClient() {\n  _s();\n  let {\n    restaurantId\n  } = useParams();\n  const restaurantIdValue = restaurantId.split(\"=\")[1];\n  const [validation, setValidation] = useState(\"\");\n  const fetchRestaurant = useFetchRestaurant();\n  const {\n    restaurantIdParams,\n    setRestaurantIdParams\n  } = useStaffContext();\n  const navigate = useNavigate();\n  console.log(\"rid\", restaurantIdValue);\n\n  //Check in db if restaurant exists\n  const restaurantQuery = useQuery({\n    queryKey: [\"restaurant\"],\n    queryFn: async () => await fetchRestaurant.getRestaurant(restaurantIdValue),\n    onSuccess: data => {\n      if (data.status != \"Success\") {\n        console.log(\"essomana\", data);\n        setValidation(data.response);\n        setTimeout(() => {\n          navigate(\"/homepage/\");\n        }, 3000);\n      } else {\n        console.log(\"merebe\", data);\n        restaurantIdParams.current = restaurantIdValue;\n        navigate(`/privateClient/restaurantId=${restaurantIdValue}/private-home-client/`);\n      }\n    }\n  });\n  return !restaurantQuery.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: validation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(PrivateClient, \"BmHlBxKrnn087KZ2w5QgtJFNEsI=\", false, function () {\n  return [useParams, useFetchRestaurant, useStaffContext, useNavigate, useQuery];\n});\n_c = PrivateClient;\nvar _c;\n$RefreshReg$(_c, \"PrivateClient\");","map":{"version":3,"names":["React","useContext","useState","Navigate","Outlet","useLocation","useNavigate","useParams","useUserContext","Spinner","useFetchRestaurant","useQuery","useStaffContext","jsxDEV","_jsxDEV","PrivateClient","_s","restaurantId","restaurantIdValue","split","validation","setValidation","fetchRestaurant","restaurantIdParams","setRestaurantIdParams","navigate","console","log","restaurantQuery","queryKey","queryFn","getRestaurant","onSuccess","data","status","response","setTimeout","current","isLoading","children","className","fileName","_jsxFileName","lineNumber","columnNumber","animation","_c","$RefreshReg$"],"sources":["C:/Users/mereb/Documents/git_repos/TipTap/TipTap/frontend/tiptap/src/components/PrivateClient/PrivateClient.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Navigate,\r\n  Outlet,\r\n  useLocation,\r\n  useNavigate,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useUserContext } from \"../../contexts/AuthContext\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { useFetchRestaurant } from \"../../fetches/FetchRestaurant\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useStaffContext } from \"../../contexts/fetches-contexts/StaffContext\";\r\nexport default function PrivateClient() {\r\n  let { restaurantId } = useParams();\r\n  const restaurantIdValue = restaurantId.split(\"=\")[1];\r\n  const [validation, setValidation] = useState(\"\");\r\n  const fetchRestaurant = useFetchRestaurant();\r\n  const { restaurantIdParams, setRestaurantIdParams } = useStaffContext();\r\n  const navigate = useNavigate();\r\n\r\n  console.log(\"rid\", restaurantIdValue);\r\n\r\n  //Check in db if restaurant exists\r\n  const restaurantQuery = useQuery({\r\n    queryKey: [\"restaurant\"],\r\n    queryFn: async () => await fetchRestaurant.getRestaurant(restaurantIdValue),\r\n    onSuccess: (data) => {\r\n      if (data.status != \"Success\") {\r\n        console.log(\"essomana\", data);\r\n        setValidation(data.response);\r\n        setTimeout(() => {\r\n          navigate(\"/homepage/\");\r\n        }, 3000);\r\n      } else {\r\n        console.log(\"merebe\", data);\r\n        restaurantIdParams.current = restaurantIdValue;\r\n        navigate(\r\n          `/privateClient/restaurantId=${restaurantIdValue}/private-home-client/`\r\n        );\r\n      }\r\n    },\r\n  });\r\n  return !restaurantQuery.isLoading ? (\r\n    <div>\r\n      <div className=\" d-flex justify-content-center align-items-center\">\r\n        <h1>{validation}</h1>\r\n      </div>\r\n      <Outlet />\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <Spinner animation=\"border\" />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}