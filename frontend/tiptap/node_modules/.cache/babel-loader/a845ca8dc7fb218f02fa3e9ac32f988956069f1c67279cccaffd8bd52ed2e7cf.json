{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mereb\\\\Documents\\\\git_repos\\\\TipTap\\\\TipTap\\\\frontend\\\\tiptap\\\\src\\\\features\\\\UploadingImage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport UploadImage from \"../images/upload_image_signup.png\";\nimport \"../style.css\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { useEffect, useState } from \"react\";\nimport { useUserContext } from \"../contexts/AuthContext\";\nimport { storage } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadingImage() {\n  _s();\n  const [file, setFile] = useState(\"\");\n  const {\n    data,\n    setData,\n    setPercentage\n  } = useUserContext();\n  const uploadFile = () => {\n    const name = new Date().getTime() + file.name;\n    const storageRef = ref(storage, name);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.on(\"state_changed\", snapshot => {\n      // Observe state change events such as progress, pause, and resume\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log(\"Upload is \" + progress + \"% done\");\n      setPercentage(progress);\n      switch (snapshot.state) {\n        case \"paused\":\n          console.log(\"Upload is paused\");\n          break;\n        case \"running\":\n          console.log(\"Upload is running\");\n          break;\n        default:\n          break;\n      }\n    }, error => {\n      console.log(error);\n    }, () => {\n      // Handle successful uploads on complete\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n      getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n        setData(prev => ({\n          ...prev,\n          img: downloadURL\n        }));\n      });\n    });\n  };\n  useEffect(() => {\n    file && uploadFile();\n  }, [file]);\n  useEffect(() => {\n    console.log(\"data image\" + data.img);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \" d-flex justify-content-center  col-m-50\",\n    sm: 12,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      id: \"file\",\n      style: {\n        display: \"none\"\n      },\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), data.img ?\n    /*#__PURE__*/\n    // Vérifiez si une image a été téléchargée\n    _jsxDEV(\"img\", {\n      src: data.img,\n      alt: \"Profile\",\n      className: \"circular-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file\",\n      className: \"btn \",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: UploadImage,\n        alt: \"Upload\",\n        className: \"mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadingImage, \"jsEsItCfuWt5O/Am9AjNKAJqlsA=\", false, function () {\n  return [useUserContext];\n});\n_c = UploadingImage;\nvar _c;\n$RefreshReg$(_c, \"UploadingImage\");","map":{"version":3,"names":["React","Col","UploadImage","getDownloadURL","ref","uploadBytesResumable","useEffect","useState","useUserContext","storage","jsxDEV","_jsxDEV","UploadingImage","_s","file","setFile","data","setData","setPercentage","uploadFile","name","Date","getTime","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","console","log","state","error","then","downloadURL","prev","img","className","sm","children","type","id","style","display","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/mereb/Documents/git_repos/TipTap/TipTap/frontend/tiptap/src/features/UploadingImage.js"],"sourcesContent":["import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport UploadImage from \"../images/upload_image_signup.png\";\r\nimport \"../style.css\";\r\n\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useUserContext } from \"../contexts/AuthContext\";\r\nimport { storage } from \"../firebase\";\r\n\r\nexport default function UploadingImage() {\r\n  const [file, setFile] = useState(\"\");\r\n  const { data, setData, setPercentage } = useUserContext();\r\n\r\n  const uploadFile = () => {\r\n    const name = new Date().getTime() + file.name;\r\n    const storageRef = ref(storage, name);\r\n\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        // Observe state change events such as progress, pause, and resume\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log(\"Upload is \" + progress + \"% done\");\r\n        setPercentage(progress);\r\n        switch (snapshot.state) {\r\n          case \"paused\":\r\n            console.log(\"Upload is paused\");\r\n            break;\r\n          case \"running\":\r\n            console.log(\"Upload is running\");\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // Handle successful uploads on complete\r\n        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n          setData((prev) => ({ ...prev, img: downloadURL }));\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    file && uploadFile();\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"data image\" + data.img);\r\n  }, [data]);\r\n  return (\r\n    <Col className=\" d-flex justify-content-center  col-m-50\" sm={12}>\r\n      <input\r\n        type=\"file\"\r\n        className=\"form-control\"\r\n        id=\"file\"\r\n        style={{ display: \"none\" }}\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n      />\r\n      {data.img ? ( // Vérifiez si une image a été téléchargée\r\n        <img src={data.img} alt=\"Profile\" className=\"circular-image\" />\r\n      ) : (\r\n        <label htmlFor=\"file\" className=\"btn \">\r\n          <img src={UploadImage} alt=\"Upload\" className=\"mr-2\" />\r\n        </label>\r\n      )}\r\n    </Col>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}